services:
  cassandra:
    image: cassandra:latest
    container_name: cassandra-oggy
    ports:
      - "9044:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=hingage-cluster
      - CASSANDRA_NUM_TOKENS=256
      - CASSANDRA_AUTHENTICATOR=PasswordAuthenticator
      - CASSANDRA_AUTHORIZER=CassandraAuthorizer
      - CASSANDRA_RPC_ADDRESS=0.0.0.0
    volumes:
      - ./Docker/cassandra_conf/cassandra.yml:/etc/cassandra/cassandra.yml
      - ./init.cql:/docker-entrypoint-initdb.d/init.cql
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "describe keyspaces"]
      interval: 30s
      retries: 5
      start_period: 40s
    networks:
      - chatbot-network

  adminer:
    image: adminer
    container_name: adminer-oggy
    restart: always
    ports:
      - "8082:8083"
    networks:
      - chatbot-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-oggy
    restart: unless-stopped
    ports:
      - "2182:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-oggy
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
      - "29093:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2182"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

#  minio:
#    image: minio/minio:latest
#    container_name: minio
#    ports:
#      - "9000:9000"      # Accès à l'API MinIO
#      - "9001:9001"      # Accès à la console d'administration
#    environment:
#      MINIO_ROOT_USER: "minioadmin"      # Nom d'utilisateur par défaut
#      MINIO_ROOT_PASSWORD: "minioadmin"  # Mot de passe par défaut
#    volumes:
#      - minio_data:/data  # Volume persistant pour stocker les données
#    command: server /data --console-address ":9001"  # Démarrage du serveur et configuration de la console


  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq-oggy
    restart: unless-stopped
    ports:
      - "8085:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            local-kafka:
              properties:
                bootstrap.servers: "kafka:9092"
    depends_on:
      - kafka

volumes:
  minio_data:

networks:
  chatbot-network:
    driver: bridge
